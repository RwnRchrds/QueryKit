<Project Sdk="Microsoft.NET.Sdk">

    <PropertyGroup>
        <!-- Targets -->
        <TargetFrameworks>net8.0;netstandard2.0</TargetFrameworks>
        <Nullable>enable</Nullable>
        <LangVersion>latest</LangVersion>

        <!-- Packing -->
        <GeneratePackageOnBuild>false</GeneratePackageOnBuild>
        <GenerateDocumentationFile>true</GenerateDocumentationFile>
        <IncludeSymbols>true</IncludeSymbols>
        <SymbolPackageFormat>snupkg</SymbolPackageFormat>

        <!-- NuGet metadata -->
        <PackageId>Rowan.QueryKit</PackageId>
        <Title>QueryKit</Title>
        <Authors>Rowan Richards</Authors>
        <Company>Rowan Richards</Company>
        <Description>Lightweight, dependency-light SQL builder + CRUD extensions for Dapper. Dialect-aware. Attribute-friendly. Zero ceremony.</Description>
        <PackageTags>dapper sql crud micro-orm query repository</PackageTags>
        <PackageProjectUrl>https://github.com/RwnRchrds/QueryKit</PackageProjectUrl>
        <RepositoryUrl>https://github.com/RwnRchrds/QueryKit</RepositoryUrl>
        <RepositoryType>git</RepositoryType>
        <PackageReadmeFile>README.md</PackageReadmeFile>
        <PublishRepositoryUrl>true</PublishRepositoryUrl>
        <PackageLicenseFile>LICENSE</PackageLicenseFile>

        <!-- CI bits / SourceLink -->
        <!-- Only set by CI; harmless locally -->
        <ContinuousIntegrationBuild Condition="'$(TEAMCITY_VERSION)' != ''">true</ContinuousIntegrationBuild>
        <EmbedUntrackedSources>true</EmbedUntrackedSources>

        <!-- === Versioning ===
             TeamCity will pass /p:Version, /p:PackageVersion, /p:InformationalVersion.
             We provide LOCAL FALLBACKS so dev machines still build nicely.
        -->
        <!-- Default library (package) version when not provided by CI -->
        <Version Condition="'$(Version)' == ''">0.9.0</Version>
        <PackageVersion Condition="'$(PackageVersion)' == ''">$(Version)</PackageVersion>

        <!-- Stable assembly version by default; override from CI if you want -->
        <AssemblyVersion Condition="'$(AssemblyVersion)' == ''">0.9.0.0</AssemblyVersion>
        <FileVersion Condition="'$(FileVersion)' == ''">$(Version)</FileVersion>

        <!-- Add git SHA if available (SourceLink populates SourceRevisionId); otherwise mark as Local -->
        <InformationalVersion Condition="'$(InformationalVersion)' == '' and '$(SourceRevisionId)' != ''">$(Version)+$(SourceRevisionId)</InformationalVersion>
        <InformationalVersion Condition="'$(InformationalVersion)' == '' and '$(SourceRevisionId)' == ''">$(Version)+Local</InformationalVersion>

        <!-- Localization -->
        <NeutralLanguage>en-GB</NeutralLanguage>
    </PropertyGroup>

    <ItemGroup>
        <PackageReference Include="Dapper" Version="2.1.66" />
        <!-- SourceLink for rich debugging from NuGet -->
        <PackageReference Include="Microsoft.SourceLink.GitHub" Version="8.*" PrivateAssets="All" />
        <!-- Only needed for netstandard2.0 builds that use dynamic binder -->
        <PackageReference Include="Microsoft.CSharp" Version="4.7.0" Condition="'$(TargetFramework)'=='netstandard2.0'" />
    </ItemGroup>

    <!-- Pack the README (use project-relative path so it works in dotnet pack) -->
    <ItemGroup>
        <None Include="../README.md" Pack="true" PackagePath="" />
        <None Include="../LICENSE" Pack="true" PackagePath="" />
    </ItemGroup>

</Project>